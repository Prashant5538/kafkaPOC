buildscript {
	ext {
		springBootVersion = '1.4.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'application'
apply plugin: 'war'

war {
	baseName = 'search'
	//version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.7
//ext['tomcat.version'] = '7.0.59'
ext['elasticsearch.version'] = '2.4.2'

repositories {
	mavenCentral()
}

if (project.hasProperty('env')) {
    println "Target environment: $env"
    sourceSets.main.resources.srcDir "src/main/resources/$env"
}

configurations {
	providedRuntime
}

dependencies {
	
	
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile group: 'org.json', name: 'json', version: '20160810'
	compile('org.json:json')
	compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
	compile('org.codehaus.jackson:jackson-jaxrs:1.9.0')	
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	
	// https://mvnrepository.com/artifact/org.springframework.kafka/spring-kafka
	compile group: 'org.springframework.kafka', name: 'spring-kafka', version: '1.2.0.RELEASE'

}

configurations.all {
    
}

applicationDefaultJvmArgs = [
   "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=50040"
]
